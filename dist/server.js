var A=Object.defineProperty;var t=(r,e)=>A(r,"name",{value:e,configurable:!0});import{PrismaClient as b}from"@prisma/client";import I from"express";import{ZodError as T}from"zod";var R=t((r,e)=>{if(console.error(`[${new Date().toISOString()}] ${r.stack}`),r instanceof T){e.status(400).json({error:"Validation error",details:r.errors});return}let o=r.statusCode||500;e.status(o).json({error:r.message||"An unexpected error occurred"})},"errorHandler");var g=t((r,e,o)=>{let s=Date.now();e.on("finish",()=>{let i=Date.now()-s;console.log(`[${new Date().toISOString()}] ${r.method} ${r.url} - ${e.statusCode} ${i}ms`)}),o()},"requestLogger");import F from"express";import{z as f}from"zod";var h=f.object({productId:f.number().positive(),quantity:f.number().min(1)});import{PrismaClient as D}from"@prisma/client";var a=t((r,e)=>{let o=new Error(r);return o.statusCode=e,o},"createError");var $=new D,l={validateProduct:t((r,e)=>{let o=r.find(s=>s.id===e);if(!o)throw a("Product not found",404);if(!o.inStock)throw a("Product is out of stock",400);return o},"validateProduct"),createOrder:t(async r=>await $.order.create({data:{product_id:r.productId,quantity:r.quantity}}),"createOrder")};import j from"got";var x="https://jsonplaceholder.typicode.com/posts",P=process.env.PORT||3e3;var u=t(async()=>{try{let r=await j.get(x).json();return console.log(r),r.map(o=>({id:o.id,name:o.title,price:Math.round(Math.random()*1e3),inStock:o.id%2!==0}))}catch{throw a("Failed to fetch products",503)}},"fetchProducts");var y=t(async(r,e,o)=>{try{let s=h.parse(r.body),i=await u(),d=l.validateProduct(i,s.productId),m=await l.createOrder(s);e.status(201).json({message:"Order placed successfully",order:m,product:d})}catch(s){o(s)}},"createOrder");var O=F.Router();O.post("/",y);var S=O;import _ from"express";var w=t(async(r,e,o)=>{try{let s=parseInt(r.query.page,10)||1,i=parseInt(r.query.limit,10)||10,d=(s-1)*i,m=await u(),C=m.slice(d,d+i);e.json({currentPage:s,totalPages:Math.ceil(m.length/i),products:C})}catch(s){o(s)}},"getProducts");var E=_.Router();E.get("/",w);var v=E;var p=I();p.use(I.json());p.use(g);p.use("/products",v);p.use("/order",S);p.use(R);var q=p;var N=new b,U=t(()=>{q.listen(P,()=>{console.log(`Server is running on http://localhost:${P}`)})},"startServer");U();process.on("SIGTERM",async()=>{await N.$disconnect(),process.exit(0)});
//# sourceMappingURL=server.js.map